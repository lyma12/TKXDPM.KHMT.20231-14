CREATE DATABASE AIMS;
CREATE TABLE AIMS.Media (
id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
quantity INTEGER NOT NULL,
title VARCHAR(50) NOT NULL,
barCode INTEGER NOT NULL,
description VARCHAR(50) NOT NULL,
dimensions VARCHAR(20) NOT NULL,
imageURL VARCHAR(50) NOT NULL,
importDate DATETIME NOT NULL,
category VARCHAR(20) NOT NULL,
price DECIMAL(10, 2) NOT NULL,
value DECIMAL(10,2) NOT NULL
);
CREATE TABLE AIMS.Book (
id INTEGER PRIMARY KEY NOT NULL,
coverType VARCHAR(20) NOT NULL,
author VARCHAR(50) NOT NULL,
publisher VARCHAR(50) NOT NULL,
language VARCHAR(50),
pages INTEGER,
genre VARCHAR(50),
publishDate DATETIME NOT NULL,
CONSTRAINT FK_Book_Media
FOREIGN KEY(id)
REFERENCES Media(id)
);
CREATE TABLE AIMS.CD (
id INTEGER PRIMARY KEY NOT NULL,
artist VARCHAR(50) NOT NULL,
recordLabel VARCHAR(50) NOT NULL,
publishDate DATETIME,
musicType VARCHAR(50) NOT NULL,
trackList VARCHAR(50) NOT NULL,
CONSTRAINT FK_CD_Media
FOREIGN KEY(id)
REFERENCES Media(id)
);
CREATE TABLE AIMS.LP (
id INTEGER PRIMARY KEY NOT NULL,
artist VARCHAR(50) NOT NULL,
recordLabel VARCHAR(50) NOT NULL,
publishDate DATETIME,
musicType VARCHAR(50) NOT NULL,
trackList VARCHAR(50) NOT NULL,
CONSTRAINT FK_LP_Media
FOREIGN KEY(id)
REFERENCES Media(id)
);
CREATE TABLE AIMS.DVD (
id INTEGER PRIMARY KEY NOT NULL,
discType VARCHAR(50) NOT NULL,
contentType VARCHAR(50),
director VARCHAR(50) NOT NULL,
runtime INTEGER NOT NULL,
subtitle VARCHAR(50) NOT NULL,
language VARCHAR(50) NOT NULL,
studio VARCHAR(50) NOT NULL,
publishDate DATETIME,
CONSTRAINT FK_DVD_Media
FOREIGN KEY(id)
REFERENCES Media(id)
);
CREATE TABLE AIMS.DeliveryInfo (
id INTEGER PRIMARY KEY NOT NULL,
instructions VARCHAR(50),
province VARCHAR(20) NOT NULL,
address VARCHAR(50) NOT NULL,
name VARCHAR(50) NOT NULL
);
CREATE TABLE AIMS.Invoice (
id INTEGER PRIMARY KEY NOT NULL,
totalAmount INTEGER NOT NULL,
totalPrice DECIMAL(10, 2) NOT NULL,
priceExcludeVAT DECIMAL(10, 2) NOT NULL,
priceIncludeVAT DECIMAL(10, 2) NOT NULL,
shippingFees DECIMAL(10, 2) NOT NULL
);
CREATE TABLE AIMS.InvoiceMedia (
productID INTEGER NOT NULL,
invoiceID INTEGER NOT NULL,
PRIMARY KEY(productId, invoiceId),
quantity INTEGER NOT NULL,
title VARCHAR(50) NOT NULL,
barCode INTEGER NOT NULL,
description VARCHAR(50) NOT NULL,
imageURL VARCHAR(50) NOT NULL,
price DECIMAL(10, 2) NOT NULL,
CONSTRAINT FK_InvoiceMedia_Invoice
FOREIGN KEY(invoiceId)
REFERENCES Invoice(id),
CONSTRAINT FK_InvoiceMedia_Media
FOREIGN KEY(productId)
REFERENCES Media(id)
);
CREATE TABLE AIMS.PaymentTransaction (
id INTEGER PRIMARY KEY NOT NULL,
createdDate DATETIME NOT NULL,
cardHolderName VARCHAR(50) NOT NULL,
transactionContent VARCHAR(50) NOT NULL,
withdrawBalance DECIMAL(10, 2) NOT NULL,
method VARCHAR(50) NOT NULL
);
CREATE TABLE AIMS.Order (
id INTEGER PRIMARY KEY NOT NULL,
invoiceId INTEGER NOT NULL,
paymentTransactionId INTEGER NOT NULL,
deliveryInfoId INTEGER NOT NULL,
CONSTRAINT FK_Invoice_Order
FOREIGN KEY(invoiceId)
REFERENCES Invoice(id),
CONSTRAINT FK_DeliveryInfo_Order
FOREIGN KEY(deliveryInfoId)
REFERENCES DeliveryInfo(id),
CONSTRAINT FK_PaymentTransaction_Order
FOREIGN KEY(paymentTransactionId)
REFERENCES PaymentTransaction(id)
);